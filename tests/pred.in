(define list (lambda lis lis))
(null? (list))
(null? ())
(null? (list 1))
(null? 1)
(cons? (cons 1 1))
(cons? (list 1 2 3))
(cons? (cdr (list 1 2 3)))
(cons? (cdr (list 1)))
(cons? (list))
(sym? (quote x))
(define x (quote x))
(sym? x)
(num? 1)
(num? (+ 1 2))
(define n 0)
(num? n)
(num? (lambda () (quote ())))
(num? (list 1))
(proc? list)
(proc? n)
(proc? (lambda() (quote ())))
(proc? +)
(proc? quit)
(proc? x)
(eq? () ())
(eq? 1 1)
(eq? (list 1 2 3) (list 1 2 3))
(eq? (list 2) (list 1))
(eq? (list 1 2) (list 1 2 3))
(eq? (list 2) (list 2))
(eq? (list n n n) (list n n n))
(quit)
