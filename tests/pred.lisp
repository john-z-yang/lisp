(display (null? (list)))
(display (null? ()))
(display (null? (list 1)))
(display (null? 1))
(display (cons? (cons 1 1)))
(display (cons? (list 1 2 3)))
(display (cons? (cdr (list 1 2 3))))
(display (cons? (cdr (list 1))))
(display (cons? (list)))
(display (sym? (quote x)))
(display (define x (quote x)))
(display (sym? x))
(display (num? 1))
(display (num? (+ 1 2)))
(define n 0)
(display (num? n))
(display (num? (lambda () (quote ()))))
(display (num? (list 1)))
(display (proc? list))
(display (proc? n))
(display (proc? (lambda() (quote ()))))
(display (proc? +))
(display (proc? quit))
(display (proc? x))
(display (eq? () ()))
(display (eq? 1 1))
(display (eq? (list 1 2 3) (list 1 2 3)))
(display (eq? (list 2) (list 1)))
(display (eq? (list 1 2) (list 1 2 3)))
(display (eq? (list 2) (list 2)))
(display (eq? (list n n n) (list n n n)))
(display (eq? (lambda () ()) ()))
(display (eq? (lambda () ()) (lambda () ())))
(define fn0 (lambda () ()))
(define fn1 fn0)
(display (eq? fn0 fn1))
(display (eq? + +))
(define plus +)
(display (eq? plus +))
(display (eq? plus -))
(display (eq? - plus))
(display (eq? - +))
